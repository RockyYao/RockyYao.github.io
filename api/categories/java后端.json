{"name":"java后端","slug":"java后端","count":10,"postlist":[{"title":"Java 基础","slug":"Java 基础","date":"2018-07-20T02:49:41.000Z","updated":"2018-09-26T07:51:37.453Z","comments":true,"path":"api/articles/Java 基础.json","excerpt":"<!-- GFM-TOC -->\n<ul>\n<li><a href=\"#一数据类型\">一、数据类型</a><ul>\n<li><a href=\"#包装类型\">包装类型</a></li>\n<li><a href=\"#缓存池\">缓存池</a></li>\n</ul>\n</li>\n<li><a href=\"#二string\">二、String</a><ul>\n<li><a href=\"#概览\">概览</a></li>\n<li><a href=\"#不可变的好处\">不可变的好处</a></li>\n<li><a href=\"#string,-stringbuffer-and-stringbuilder\">String, StringBuffer and StringBuilder</a></li>\n<li><a href=\"#string-pool\">String Pool</a></li>\n<li><a href=\"#new-string&quot;abc&quot;\">new String(“abc”)</a></li>\n</ul>\n</li>\n<li><a href=\"#三运算\">三、运算</a><ul>\n<li><a href=\"#参数传递\">参数传递</a></li>\n<li><a href=\"#float-与-double\">float 与 double</a></li>\n<li><a href=\"#隐式类型转换\">隐式类型转换</a></li>\n<li><a href=\"#switch\">switch</a></li>\n</ul>\n</li>\n<li><a href=\"#四继承\">四、继承</a><ul>\n<li><a href=\"#访问权限\">访问权限</a></li>\n<li><a href=\"#抽象类与接口\">抽象类与接口</a></li>\n<li><a href=\"#super\">super</a></li>\n<li><a href=\"#重写与重载\">重写与重载</a></li>\n</ul>\n</li>\n<li><a href=\"#五object-通用方法\">五、Object 通用方法</a><ul>\n<li><a href=\"#概览\">概览</a></li>\n<li><a href=\"#equals\">equals()</a></li>\n<li><a href=\"#hashcode\">hashCode()</a></li>\n<li><a href=\"#tostring\">toString()</a></li>\n<li><a href=\"#clone\">clone()</a></li>\n</ul>\n</li>\n<li><a href=\"#六关键字\">六、关键字</a><ul>\n<li><a href=\"#final\">final</a></li>\n<li><a href=\"#static\">static</a></li>\n</ul>\n</li>\n<li><a href=\"#七反射\">七、反射</a></li>\n<li><a href=\"#八异常\">八、异常</a></li>\n<li><a href=\"#九泛型\">九、泛型</a></li>\n<li><a href=\"#十注解\">十、注解</a></li>\n<li><a href=\"#十一特性\">十一、特性</a><ul>\n<li><a href=\"#java-各版本的新特性\">Java 各版本的新特性</a></li>\n<li><a href=\"#java-与-c-的区别\">Java 与 C++ 的区别</a></li>\n<li><a href=\"#jre-or-jdk\">JRE or JDK</a></li>\n</ul>\n</li>\n<li><a href=\"#参考资料\">参考资料</a><!-- GFM-TOC -->\n</li>\n</ul>","keywords":null,"cover":"../pics//f76067a5-7d5f-4135-9549-8199c77d8f1c.jpg","content":null,"text":"一、数据类型包装类型缓存池二、String概览不可变的好处String, StringBuffer and StringBuilderString Poolnew String(“abc”)三、运算参数传递float 与 double隐式类型转换switch四、继承访问权限抽象类","link":"","raw":null,"photos":[],"categories":[{"name":"java后端","slug":"java后端","count":10,"path":"api/categories/java后端.json"},{"name":"java基础","slug":"java后端/java基础","count":10,"path":"api/categories/java后端/java基础.json"}],"tags":[{"name":"java","slug":"java","count":11,"path":"api/tags/java.json"}]},{"title":"Java 容器","slug":"Java 容器","date":"2018-05-20T00:44:41.000Z","updated":"2018-09-26T07:51:41.711Z","comments":true,"path":"api/articles/Java 容器.json","excerpt":"<!-- GFM-TOC -->\n<ul>\n<li><a href=\"#一概览\">一、概览</a><ul>\n<li><a href=\"#collection\">Collection</a></li>\n<li><a href=\"#map\">Map</a></li>\n</ul>\n</li>\n<li><a href=\"#二容器中的设计模式\">二、容器中的设计模式</a><ul>\n<li><a href=\"#迭代器模式\">迭代器模式</a></li>\n<li><a href=\"#适配器模式\">适配器模式</a></li>\n</ul>\n</li>\n<li><a href=\"#三源码分析\">三、源码分析</a><ul>\n<li><a href=\"#arraylist\">ArrayList</a></li>\n<li><a href=\"#vector\">Vector</a></li>\n<li><a href=\"#copyonwritearraylist\">CopyOnWriteArrayList</a></li>\n<li><a href=\"#linkedlist\">LinkedList</a></li>\n<li><a href=\"#hashmap\">HashMap</a></li>\n<li><a href=\"#concurrenthashmap\">ConcurrentHashMap</a></li>\n<li><a href=\"#linkedhashmap\">LinkedHashMap</a></li>\n<li><a href=\"#weakhashmap\">WeakHashMap</a></li>\n</ul>\n</li>\n<li><a href=\"#附录\">附录</a></li>\n<li><a href=\"#参考资料\">参考资料</a><!-- GFM-TOC -->\n</li>\n</ul>","keywords":null,"cover":"../pics//VP6n3i8W48Ptde8NQ9_0eSR5eOD6uqx.png","content":null,"text":"一、概览CollectionMap二、容器中的设计模式迭代器模式适配器模式三、源码分析ArrayListVectorCopyOnWriteArrayListLinkedListHashMapConcurrentHashMapLinkedHashMapWeakHashMap附录参考","link":"","raw":null,"photos":[],"categories":[{"name":"java后端","slug":"java后端","count":10,"path":"api/categories/java后端.json"},{"name":"java基础","slug":"java后端/java基础","count":10,"path":"api/categories/java后端/java基础.json"}],"tags":[{"name":"java","slug":"java","count":11,"path":"api/tags/java.json"}]},{"title":"Java IO","slug":"Java IO","date":"2018-04-19T09:12:46.000Z","updated":"2018-09-26T07:51:28.227Z","comments":true,"path":"api/articles/Java IO.json","excerpt":"<!-- GFM-TOC -->\n<ul>\n<li><a href=\"#一概览\">一、概览</a></li>\n<li><a href=\"#二磁盘操作\">二、磁盘操作</a></li>\n<li><a href=\"#三字节操作\">三、字节操作</a><ul>\n<li><a href=\"#实现文件复制\">实现文件复制</a></li>\n<li><a href=\"#装饰者模式\">装饰者模式</a></li>\n</ul>\n</li>\n<li><a href=\"#四字符操作\">四、字符操作</a><ul>\n<li><a href=\"#编码与解码\">编码与解码</a></li>\n<li><a href=\"#string-的编码方式\">String 的编码方式</a></li>\n<li><a href=\"#reader-与-writer\">Reader 与 Writer</a></li>\n<li><a href=\"#实现逐行输出文本文件的内容\">实现逐行输出文本文件的内容</a></li>\n</ul>\n</li>\n<li><a href=\"#五对象操作\">五、对象操作</a><ul>\n<li><a href=\"#序列化\">序列化</a></li>\n<li><a href=\"#serializable\">Serializable</a></li>\n<li><a href=\"#transient\">transient</a></li>\n</ul>\n</li>\n<li><a href=\"#六网络操作\">六、网络操作</a><ul>\n<li><a href=\"#inetaddress\">InetAddress</a></li>\n<li><a href=\"#url\">URL</a></li>\n<li><a href=\"#sockets\">Sockets</a></li>\n<li><a href=\"#datagram\">Datagram</a></li>\n</ul>\n</li>\n<li><a href=\"#七nio\">七、NIO</a><ul>\n<li><a href=\"#流与块\">流与块</a></li>\n<li><a href=\"#通道与缓冲区\">通道与缓冲区</a></li>\n<li><a href=\"#缓冲区状态变量\">缓冲区状态变量</a></li>\n<li><a href=\"#文件-nio-实例\">文件 NIO 实例</a></li>\n<li><a href=\"#选择器\">选择器</a></li>\n<li><a href=\"#套接字-nio-实例\">套接字 NIO 实例</a></li>\n<li><a href=\"#内存映射文件\">内存映射文件</a></li>\n<li><a href=\"#对比\">对比</a></li>\n</ul>\n</li>\n<li><a href=\"#八参考资料\">八、参考资料</a><!-- GFM-TOC -->","keywords":null,"cover":"../pics//DP-Decorator-java.io.png","content":null,"text":"一、概览二、磁盘操作三、字节操作实现文件复制装饰者模式四、字符操作编码与解码String 的编码方式Reader 与 Writer实现逐行输出文本文件的内容五、对象操作序列化Serializabletransient六、网络操作InetAddressURLSocketsDatag","link":"","raw":null,"photos":[],"categories":[{"name":"java后端","slug":"java后端","count":10,"path":"api/categories/java后端.json"},{"name":"java基础","slug":"java后端/java基础","count":10,"path":"api/categories/java后端/java基础.json"}],"tags":[{"name":"java","slug":"java","count":11,"path":"api/tags/java.json"}]},{"title":"Java 虚拟机","slug":"Java 虚拟机","date":"2018-04-21T03:54:48.000Z","updated":"2018-09-26T07:51:45.992Z","comments":true,"path":"api/articles/Java 虚拟机.json","excerpt":"<!-- GFM-TOC -->\n<ul>\n<li><a href=\"#一运行时数据区域\">一、运行时数据区域</a><ul>\n<li><a href=\"#程序计数器\">程序计数器</a></li>\n<li><a href=\"#java-虚拟机栈\">Java 虚拟机栈</a></li>\n<li><a href=\"#本地方法栈\">本地方法栈</a></li>\n<li><a href=\"#堆\">堆</a></li>\n<li><a href=\"#方法区\">方法区</a></li>\n<li><a href=\"#运行时常量池\">运行时常量池</a></li>\n<li><a href=\"#直接内存\">直接内存</a></li>\n</ul>\n</li>\n<li><a href=\"#二垃圾收集\">二、垃圾收集</a><ul>\n<li><a href=\"#判断一个对象是否可被回收\">判断一个对象是否可被回收</a></li>\n<li><a href=\"#引用类型\">引用类型</a></li>\n<li><a href=\"#垃圾收集算法\">垃圾收集算法</a></li>\n<li><a href=\"#垃圾收集器\">垃圾收集器</a></li>\n</ul>\n</li>\n<li><a href=\"#三内存分配与回收策略\">三、内存分配与回收策略</a><ul>\n<li><a href=\"#minor-gc-和-full-gc\">Minor GC 和 Full GC</a></li>\n<li><a href=\"#内存分配策略\">内存分配策略</a></li>\n<li><a href=\"#full-gc-的触发条件\">Full GC 的触发条件</a></li>\n</ul>\n</li>\n<li><a href=\"#四类加载机制\">四、类加载机制</a><ul>\n<li><a href=\"#类的生命周期\">类的生命周期</a></li>\n<li><a href=\"#类加载过程\">类加载过程</a></li>\n<li><a href=\"#类初始化时机\">类初始化时机</a></li>\n<li><a href=\"#类与类加载器\">类与类加载器</a></li>\n<li><a href=\"#类加载器分类\">类加载器分类</a></li>\n<li><a href=\"#双亲委派模型\">双亲委派模型</a></li>\n<li><a href=\"#自定义类加载器实现\">自定义类加载器实现</a></li>\n</ul>\n</li>\n<li><a href=\"#参考资料\">参考资料</a><!-- GFM-TOC -->","keywords":null,"cover":"../pics//c9ad2bf4-5580-4018-bce4-1b9a71804d9c.png","content":null,"text":"一、运行时数据区域程序计数器Java 虚拟机栈本地方法栈堆方法区运行时常量池直接内存二、垃圾收集判断一个对象是否可被回收引用类型垃圾收集算法垃圾收集器三、内存分配与回收策略Minor GC 和 Full GC内存分配策略Full GC 的触发条件四、类加载机制类的生命周期类加载过","link":"","raw":null,"photos":[],"categories":[{"name":"java后端","slug":"java后端","count":10,"path":"api/categories/java后端.json"},{"name":"java基础","slug":"java后端/java基础","count":10,"path":"api/categories/java后端/java基础.json"}],"tags":[{"name":"java","slug":"java","count":11,"path":"api/tags/java.json"}]},{"title":"Java 并发","slug":"Java 并发","date":"2018-07-21T04:49:41.000Z","updated":"2018-09-26T07:51:33.105Z","comments":true,"path":"api/articles/Java 并发.json","excerpt":"<!-- GFM-TOC -->\n<ul>\n<li><a href=\"#一线程状态转换\">一、线程状态转换</a><ul>\n<li><a href=\"#新建new\">新建（New）</a></li>\n<li><a href=\"#可运行runnable\">可运行（Runnable）</a></li>\n<li><a href=\"#阻塞blocking\">阻塞（Blocking）</a></li>\n<li><a href=\"#无限期等待waiting\">无限期等待（Waiting）</a></li>\n<li><a href=\"#限期等待timed-waiting\">限期等待（Timed Waiting）</a></li>\n<li><a href=\"#死亡terminated\">死亡（Terminated）</a></li>\n</ul>\n</li>\n<li><a href=\"#二使用线程\">二、使用线程</a><ul>\n<li><a href=\"#实现-runnable-接口\">实现 Runnable 接口</a></li>\n<li><a href=\"#实现-callable-接口\">实现 Callable 接口</a></li>\n<li><a href=\"#继承-thread-类\">继承 Thread 类</a></li>\n<li><a href=\"#实现接口-vs-继承-thread\">实现接口 VS 继承 Thread</a></li>\n</ul>\n</li>\n<li><a href=\"#三基础线程机制\">三、基础线程机制</a><ul>\n<li><a href=\"#executor\">Executor</a></li>\n<li><a href=\"#daemon\">Daemon</a></li>\n<li><a href=\"#sleep\">sleep()</a></li>\n<li><a href=\"#yield\">yield()</a></li>\n</ul>\n</li>\n<li><a href=\"#四中断\">四、中断</a><ul>\n<li><a href=\"#interruptedexception\">InterruptedException</a></li>\n<li><a href=\"#interrupted\">interrupted()</a></li>\n<li><a href=\"#executor-的中断操作\">Executor 的中断操作</a></li>\n</ul>\n</li>\n<li><a href=\"#五互斥同步\">五、互斥同步</a><ul>\n<li><a href=\"#synchronized\">synchronized</a></li>\n<li><a href=\"#reentrantlock\">ReentrantLock</a></li>\n<li><a href=\"#比较\">比较</a></li>\n<li><a href=\"#使用选择\">使用选择</a></li>\n</ul>\n</li>\n<li><a href=\"#六线程之间的协作\">六、线程之间的协作</a><ul>\n<li><a href=\"#join\">join()</a></li>\n<li><a href=\"#wait-notify-notifyall\">wait() notify() notifyAll()</a></li>\n<li><a href=\"#await-signal-signalall\">await() signal() signalAll()</a></li>\n</ul>\n</li>\n<li><a href=\"#七juc---aqs\">七、J.U.C - AQS</a><ul>\n<li><a href=\"#countdownlatch\">CountdownLatch</a></li>\n<li><a href=\"#cyclicbarrier\">CyclicBarrier</a></li>\n<li><a href=\"#semaphore\">Semaphore</a></li>\n</ul>\n</li>\n<li><a href=\"#八juc---其它组件\">八、J.U.C - 其它组件</a><ul>\n<li><a href=\"#futuretask\">FutureTask</a></li>\n<li><a href=\"#blockingqueue\">BlockingQueue</a></li>\n<li><a href=\"#forkjoin\">ForkJoin</a></li>\n</ul>\n</li>\n<li><a href=\"#九线程不安全示例\">九、线程不安全示例</a></li>\n<li><a href=\"#十java-内存模型\">十、Java 内存模型</a><ul>\n<li><a href=\"#主内存与工作内存\">主内存与工作内存</a></li>\n<li><a href=\"#内存间交互操作\">内存间交互操作</a></li>\n<li><a href=\"#内存模型三大特性\">内存模型三大特性</a></li>\n<li><a href=\"#先行发生原则\">先行发生原则</a></li>\n</ul>\n</li>\n<li><a href=\"#十一线程安全\">十一、线程安全</a><ul>\n<li><a href=\"#不可变\">不可变</a></li>\n<li><a href=\"#互斥同步\">互斥同步</a></li>\n<li><a href=\"#非阻塞同步\">非阻塞同步</a></li>\n<li><a href=\"#无同步方案\">无同步方案</a></li>\n</ul>\n</li>\n<li><a href=\"#十二锁优化\">十二、锁优化</a><ul>\n<li><a href=\"#自旋锁\">自旋锁</a></li>\n<li><a href=\"#锁消除\">锁消除</a></li>\n<li><a href=\"#锁粗化\">锁粗化</a></li>\n<li><a href=\"#轻量级锁\">轻量级锁</a></li>\n<li><a href=\"#偏向锁\">偏向锁</a></li>\n</ul>\n</li>\n<li><a href=\"#十三多线程开发良好的实践\">十三、多线程开发良好的实践</a></li>\n<li><a href=\"#参考资料\">参考资料</a><!-- GFM-TOC -->\n</li>\n</ul>","keywords":null,"cover":"../pics//ace830df-9919-48ca-91b5-60b193f593d2.png","content":null,"text":"一、线程状态转换新建（New）可运行（Runnable）阻塞（Blocking）无限期等待（Waiting）限期等待（Timed Waiting）死亡（Terminated）二、使用线程实现 Runnable 接口实现 Callable 接口继承 Thread 类实现接口 VS ","link":"","raw":null,"photos":[],"categories":[{"name":"java后端","slug":"java后端","count":10,"path":"api/categories/java后端.json"},{"name":"java基础","slug":"java后端/java基础","count":10,"path":"api/categories/java后端/java基础.json"}],"tags":[{"name":"java","slug":"java","count":11,"path":"api/tags/java.json"}]},{"title":"正则表达式","slug":"正则表达式","date":"2018-01-05T10:55:25.000Z","updated":"2018-09-26T07:53:21.940Z","comments":true,"path":"api/articles/正则表达式.json","excerpt":"<!-- GFM-TOC -->\n<ul>\n<li><a href=\"#一概述\">一、概述</a></li>\n<li><a href=\"#二匹配单个字符\">二、匹配单个字符</a></li>\n<li><a href=\"#三匹配一组字符\">三、匹配一组字符</a></li>\n<li><a href=\"#四使用元字符\">四、使用元字符</a></li>\n<li><a href=\"#五重复匹配\">五、重复匹配</a></li>\n<li><a href=\"#六位置匹配\">六、位置匹配</a></li>\n<li><a href=\"#七使用子表达式\">七、使用子表达式</a></li>\n<li><a href=\"#八回溯引用\">八、回溯引用</a></li>\n<li><a href=\"#九前后查找\">九、前后查找</a></li>\n<li><a href=\"#十嵌入条件\">十、嵌入条件</a></li>\n<li><a href=\"#参考资料\">参考资料</a><!-- GFM-TOC -->\n</li>\n</ul>","keywords":null,"cover":"../pics//600e9c75-5033-4dad-ae2b-930957db638e.png","content":null,"text":"一、概述二、匹配单个字符三、匹配一组字符四、使用元字符五、重复匹配六、位置匹配七、使用子表达式八、回溯引用九、前后查找十、嵌入条件参考资料一、概述正则表达式用于文本内容的查找和替换。正则表达式内置于其它语言或者软件产品中，它本身不是一种语言或者软件。正则表达式在线工具二、匹配单个","link":"","raw":null,"photos":[],"categories":[{"name":"java后端","slug":"java后端","count":10,"path":"api/categories/java后端.json"},{"name":"java基础","slug":"java后端/java基础","count":10,"path":"api/categories/java后端/java基础.json"}],"tags":[{"name":"java","slug":"java","count":11,"path":"api/tags/java.json"}]},{"title":"系统设计","slug":"系统设计基础","date":"2018-07-20T02:49:41.000Z","updated":"2018-09-26T07:53:14.721Z","comments":true,"path":"api/articles/系统设计基础.json","excerpt":"<!-- GFM-TOC -->\n<ul>\n<li><a href=\"#一性能\">一、性能</a></li>\n<li><a href=\"#二伸缩性\">二、伸缩性</a></li>\n<li><a href=\"#三扩展性\">三、扩展性</a></li>\n<li><a href=\"#四可用性\">四、可用性</a></li>\n<li><a href=\"#五安全性\">五、安全性</a></li>\n<li><a href=\"#参考资料\">参考资料</a><!-- GFM-TOC -->\n</li>\n</ul>","keywords":null,"cover":null,"content":null,"text":"一、性能二、伸缩性三、扩展性四、可用性五、安全性参考资料一、性能性能指标1. 响应时间指某个请求从发出到接收到响应消耗的时间。在对响应时间进行测试时，通常采用重复请求方式，然后计算平均响应时间。2. 吞吐量指系统在单位时间内可以处理的请求数量，通常使用每秒的请求数来衡量。3. 并","link":"","raw":null,"photos":[],"categories":[{"name":"java后端","slug":"java后端","count":10,"path":"api/categories/java后端.json"},{"name":"java基础","slug":"java后端/java基础","count":10,"path":"api/categories/java后端/java基础.json"}],"tags":[{"name":"java","slug":"java","count":11,"path":"api/tags/java.json"}]},{"title":"面向对象","slug":"面向对象思想","date":"2018-07-20T02:49:41.000Z","updated":"2018-09-26T07:52:49.721Z","comments":true,"path":"api/articles/面向对象思想.json","excerpt":"<!-- GFM-TOC -->\n<ul>\n<li><a href=\"#一三大特性\">一、三大特性</a><ul>\n<li><a href=\"#封装\">封装</a></li>\n<li><a href=\"#继承\">继承</a></li>\n<li><a href=\"#多态\">多态</a></li>\n</ul>\n</li>\n<li><a href=\"#二类图\">二、类图</a><ul>\n<li><a href=\"#泛化关系-generalization\">泛化关系 (Generalization)</a></li>\n<li><a href=\"#实现关系-realization\">实现关系 (Realization)</a></li>\n<li><a href=\"#聚合关系-aggregation\">聚合关系 (Aggregation)</a></li>\n<li><a href=\"#组合关系-composition\">组合关系 (Composition)</a></li>\n<li><a href=\"#关联关系-association\">关联关系 (Association)</a></li>\n<li><a href=\"#依赖关系-dependency\">依赖关系 (Dependency)</a></li>\n</ul>\n</li>\n<li><a href=\"#三设计原则\">三、设计原则</a><ul>\n<li><a href=\"#solid\">S.O.L.I.D</a></li>\n<li><a href=\"#其他常见原则\">其他常见原则</a></li>\n</ul>\n</li>\n<li><a href=\"#参考资料\">参考资料</a><!-- GFM-TOC -->\n</li>\n</ul>","keywords":null,"cover":"../pics//SoWkIImgAStDuU8goIp9ILLmJyrBBKh.png","content":null,"text":"一、三大特性封装继承多态二、类图泛化关系 (Generalization)实现关系 (Realization)聚合关系 (Aggregation)组合关系 (Composition)关联关系 (Association)依赖关系 (Dependency)三、设计原则S.O.L.I.","link":"","raw":null,"photos":[],"categories":[{"name":"java后端","slug":"java后端","count":10,"path":"api/categories/java后端.json"},{"name":"java基础","slug":"java后端/java基础","count":10,"path":"api/categories/java后端/java基础.json"}],"tags":[{"name":"java","slug":"java","count":11,"path":"api/tags/java.json"}]},{"title":"设计模式","slug":"设计模式","date":"2018-07-20T02:49:41.000Z","updated":"2018-09-26T07:53:01.940Z","comments":true,"path":"api/articles/设计模式.json","excerpt":"<!-- GFM-TOC -->\n<ul>\n<li><a href=\"#一概述\">一、概述</a></li>\n<li><a href=\"#二创建型\">二、创建型</a><ul>\n<li><a href=\"#1-单例singleton\">1. 单例（Singleton）</a></li>\n<li><a href=\"#2-简单工厂simple-factory\">2. 简单工厂（Simple Factory）</a></li>\n<li><a href=\"#3-工厂方法factory-method\">3. 工厂方法（Factory Method）</a></li>\n<li><a href=\"#4-抽象工厂abstract-factory\">4. 抽象工厂（Abstract Factory）</a></li>\n<li><a href=\"#5-生成器builder\">5. 生成器（Builder）</a></li>\n<li><a href=\"#6-原型模式prototype\">6. 原型模式（Prototype）</a></li>\n</ul>\n</li>\n<li><a href=\"#三行为型\">三、行为型</a><ul>\n<li><a href=\"#1-责任链chain-of-responsibility\">1. 责任链（Chain Of Responsibility）</a></li>\n<li><a href=\"#2-命令command\">2. 命令（Command）</a></li>\n<li><a href=\"#3-解释器interpreter\">3. 解释器（Interpreter）</a></li>\n<li><a href=\"#4-迭代器iterator\">4. 迭代器（Iterator）</a></li>\n<li><a href=\"#5-中介者mediator\">5. 中介者（Mediator）</a></li>\n<li><a href=\"#6-备忘录memento\">6. 备忘录（Memento）</a></li>\n<li><a href=\"#7-观察者observer\">7. 观察者（Observer）</a></li>\n<li><a href=\"#8-状态state\">8. 状态（State）</a></li>\n<li><a href=\"#9-策略strategy\">9. 策略（Strategy）</a></li>\n<li><a href=\"#10-模板方法template-method\">10. 模板方法（Template Method）</a></li>\n<li><a href=\"#11-访问者visitor\">11. 访问者（Visitor）</a></li>\n<li><a href=\"#12-空对象null\">12. 空对象（Null）</a></li>\n</ul>\n</li>\n<li><a href=\"#四结构型\">四、结构型</a><ul>\n<li><a href=\"#1-适配器adapter\">1. 适配器（Adapter）</a></li>\n<li><a href=\"#2-桥接bridge\">2. 桥接（Bridge）</a></li>\n<li><a href=\"#3-组合composite\">3. 组合（Composite）</a></li>\n<li><a href=\"#4-装饰decorator\">4. 装饰（Decorator）</a></li>\n<li><a href=\"#5-外观facade\">5. 外观（Facade）</a></li>\n<li><a href=\"#6-享元flyweight\">6. 享元（Flyweight）</a></li>\n<li><a href=\"#7-代理proxy\">7. 代理（Proxy）</a></li>\n</ul>\n</li>\n<li><a href=\"#参考资料\">参考资料</a><!-- GFM-TOC -->\n</li>\n</ul>","keywords":null,"cover":"../pics//562f2844-d77c-40e0-887a-28a7128abd42.png","content":null,"text":"一、概述二、创建型1. 单例（Singleton）2. 简单工厂（Simple Factory）3. 工厂方法（Factory Method）4. 抽象工厂（Abstract Factory）5. 生成器（Builder）6. 原型模式（Prototype）三、行为型1. 责任链","link":"","raw":null,"photos":[],"categories":[{"name":"java后端","slug":"java后端","count":10,"path":"api/categories/java后端.json"},{"name":"java基础","slug":"java后端/java基础","count":10,"path":"api/categories/java后端/java基础.json"}],"tags":[{"name":"java","slug":"java","count":11,"path":"api/tags/java.json"}]},{"title":"算法","slug":"算法","date":"2018-07-20T02:49:41.000Z","updated":"2018-09-26T07:53:10.465Z","comments":true,"path":"api/articles/算法.json","excerpt":"<!-- GFM-TOC -->\n<ul>\n<li><a href=\"#一前言\">一、前言</a></li>\n<li><a href=\"#二算法分析\">二、算法分析</a><ul>\n<li><a href=\"#数学模型\">数学模型</a></li>\n<li><a href=\"#注意事项\">注意事项</a></li>\n<li><a href=\"#threesum\">ThreeSum</a></li>\n<li><a href=\"#倍率实验\">倍率实验</a></li>\n</ul>\n</li>\n<li><a href=\"#三排序\">三、排序</a><ul>\n<li><a href=\"#选择排序\">选择排序</a></li>\n<li><a href=\"#冒泡排序\">冒泡排序</a></li>\n<li><a href=\"#插入排序\">插入排序</a></li>\n<li><a href=\"#希尔排序\">希尔排序</a></li>\n<li><a href=\"#归并排序\">归并排序</a></li>\n<li><a href=\"#快速排序\">快速排序</a></li>\n<li><a href=\"#堆排序\">堆排序</a></li>\n<li><a href=\"#小结\">小结</a></li>\n</ul>\n</li>\n<li><a href=\"#四并查集\">四、并查集</a><ul>\n<li><a href=\"#quick-find\">Quick Find</a></li>\n<li><a href=\"#quick-union\">Quick Union</a></li>\n<li><a href=\"#加权-quick-union\">加权 Quick Union</a></li>\n<li><a href=\"#路径压缩的加权-quick-union\">路径压缩的加权 Quick Union</a></li>\n<li><a href=\"#比较\">比较</a></li>\n</ul>\n</li>\n<li><a href=\"#五栈和队列\">五、栈和队列</a><ul>\n<li><a href=\"#栈\">栈</a></li>\n<li><a href=\"#队列\">队列</a></li>\n</ul>\n</li>\n<li><a href=\"#六符号表\">六、符号表</a><ul>\n<li><a href=\"#初级实现\">初级实现</a></li>\n<li><a href=\"#二叉查找树\">二叉查找树</a></li>\n<li><a href=\"#2-3-查找树\">2-3 查找树</a></li>\n<li><a href=\"#红黑树\">红黑树</a></li>\n<li><a href=\"#散列表\">散列表</a></li>\n<li><a href=\"#小结\">小结</a></li>\n</ul>\n</li>\n<li><a href=\"#七其它\">七、其它</a><ul>\n<li><a href=\"#汉诺塔\">汉诺塔</a></li>\n<li><a href=\"#哈夫曼编码\">哈夫曼编码</a></li>\n</ul>\n</li>\n<li><a href=\"#参考资料\">参考资料</a><!-- GFM-TOC -->\n</li>\n</ul>","keywords":null,"cover":"../pics//37e79a32-95a9-4503-bdb1-159527e628b8.png","content":null,"text":"一、前言二、算法分析数学模型注意事项ThreeSum倍率实验三、排序选择排序冒泡排序插入排序希尔排序归并排序快速排序堆排序小结四、并查集Quick FindQuick Union加权 Quick Union路径压缩的加权 Quick Union比较五、栈和队列栈队列六、符号表初级","link":"","raw":null,"photos":[],"categories":[{"name":"java后端","slug":"java后端","count":10,"path":"api/categories/java后端.json"},{"name":"java基础","slug":"java后端/java基础","count":10,"path":"api/categories/java后端/java基础.json"}],"tags":[{"name":"java","slug":"java","count":11,"path":"api/tags/java.json"}]}]}